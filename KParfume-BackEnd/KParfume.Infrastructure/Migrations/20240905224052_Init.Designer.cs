// <auto-generated />
using System;
using KParfume.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KParfume.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240905224052_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("KParfumeSchema")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KParfume.Core.Domain.Fabrika", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("fab_adresa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fab_drzava")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fab_grad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fab_logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fab_naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("fab_pos_br")
                        .HasColumnType("integer");

                    b.Property<string>("fab_tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fab_vreme_do")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fab_vreme_od")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fabrika", "KParfumeSchema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.KategorijaParfema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("kp_naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kategorija_parfema", "KParfumeSchema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.Parfem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("par_dostupan")
                        .HasColumnType("boolean");

                    b.Property<long>("par_fab_id")
                        .HasColumnType("bigint");

                    b.Property<int>("par_kolicina")
                        .HasColumnType("integer");

                    b.Property<long>("par_kp_id")
                        .HasColumnType("bigint");

                    b.Property<double>("par_mililitraza")
                        .HasColumnType("double precision");

                    b.Property<string>("par_naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("par_obrisan")
                        .HasColumnType("boolean");

                    b.Property<string>("par_opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("par_slika")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("par_tp_id")
                        .HasColumnType("bigint");

                    b.Property<long>("par_vp_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("par_fab_id");

                    b.HasIndex("par_kp_id");

                    b.HasIndex("par_tp_id");

                    b.HasIndex("par_vp_id");

                    b.ToTable("Parfem", "KParfumeSchema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.TipParfema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("tp_naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tip_parfema", "KParfumeSchema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("kor_adresa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("kor_drzava")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("kor_email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("kor_fab_id")
                        .HasColumnType("bigint");

                    b.Property<string>("kor_grad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("kor_ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("kor_ime_kompanije")
                        .HasColumnType("text");

                    b.Property<string>("kor_lozinka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("kor_pos_br")
                        .HasColumnType("integer");

                    b.Property<string>("kor_prezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("kor_tel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("kor_uloga")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("kor_email")
                        .IsUnique();

                    b.HasIndex("kor_fab_id");

                    b.ToTable("Korisnik", "KParfumeSchema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.VrstaParfema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("vp_naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vrsta_parfema", "KParfumeSchema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.Parfem", b =>
                {
                    b.HasOne("KParfume.Core.Domain.Fabrika", "Fabrika")
                        .WithMany()
                        .HasForeignKey("par_fab_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KParfume.Core.Domain.KategorijaParfema", "KategorijaParfema")
                        .WithMany()
                        .HasForeignKey("par_kp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KParfume.Core.Domain.TipParfema", "TipParfema")
                        .WithMany()
                        .HasForeignKey("par_tp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KParfume.Core.Domain.VrstaParfema", "VrstaParfema")
                        .WithMany()
                        .HasForeignKey("par_vp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabrika");

                    b.Navigation("KategorijaParfema");

                    b.Navigation("TipParfema");

                    b.Navigation("VrstaParfema");
                });

            modelBuilder.Entity("KParfume.Core.Domain.User", b =>
                {
                    b.HasOne("KParfume.Core.Domain.Fabrika", "Fabrika")
                        .WithMany()
                        .HasForeignKey("kor_fab_id");

                    b.Navigation("Fabrika");
                });
#pragma warning restore 612, 618
        }
    }
}
